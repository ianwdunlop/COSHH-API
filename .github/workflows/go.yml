# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: 
      - main
      - '**'
  pull_request:
    branches:
      - main

jobs:
  container-job:
    runs-on: ubuntu-22.04
    container:
      image: golang:1.21
      options: --user 1001
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          HOST: localhost
          POSTGRES_DB: coshh
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_HOST_AUTH_METHOD: trust
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Run migrations
      run: |
           psql -h "localhost" -U "$POSTGRES_USER" -d "$POSTGRES_DB" -f ./scripts/init-001.sql
           psql -h "localhost" -U "$POSTGRES_USER" -d "$POSTGRES_DB" -f ./scripts/init-002.sql
           psql -h "localhost" -U "$POSTGRES_USER" -d "$POSTGRES_DB" -f ./scripts/init-003.sql

    - name: Build
      run: go build -v ./...

    - name: Test
      env:
        HOST: localhost
        PGPASSWORD: postgres
      run: go test -v ./...
