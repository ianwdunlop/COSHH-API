stages:
  - test-lint-build
  #  the test stage is required for sast-iac scanning
  - test
  - publish
  - container-scanning
  - release-api

test-lint-build-api:
  stage: test-lint-build
  image:
    name: registry.gitlab.com/medicines-discovery-catapult/informatics/docker-images/ci/golang
  services:
    - postgres:12.2-alpine
  variables:
    HOST: postgres
    POSTGRES_DB: coshh
    POSTGRES_USER: postgres
    POSTGRES_PASSWORD: postgres
    POSTGRES_HOST_AUTH_METHOD: trust
  before_script:
    - apt-get update && apt-get install -yq postgresql postgresql-contrib
    - psql -h "postgres" -U "$POSTGRES_USER" -d "$POSTGRES_DB" -f ./scripts/init-001.sql
  script:
    - go vet ./...
    - go test -v ./... -p 1
  except:
    refs:
      - main
      - tags
    variables:
      - "$CI_COMMIT_MESSAGE =~ /^Setting version to.*/"

publish-api:
  stage: publish
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint:
      - ""
  before_script:
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
  script:
    - >
      /kaniko/executor
      --context $CI_PROJECT_DIR
      --build-arg VERSION_HASH=$CI_COMMIT_SHORT_SHA
      --destination $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
      --dockerfile $CI_PROJECT_DIR/Dockerfile
  except:
    refs:
      - main
      - tags
    variables:
      - $CI_COMMIT_MESSAGE =~ /^Setting version to.*/

publish-api-main:
  stage: publish
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint:
      - ""
  before_script:
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
  script:
    - >
      /kaniko/executor
      --context $CI_PROJECT_DIR
      --build-arg VERSION_HASH=$CI_COMMIT_SHORT_SHA
      --destination $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
      --destination $CI_REGISTRY_IMAGE:latest
      --dockerfile $CI_PROJECT_DIR/Dockerfile
  only:
    refs:
      - tags
      - main
    variables:
      - "$CI_COMMIT_MESSAGE =~ /^Setting version to.*/"

release-api:
  stage: release-api
  image: registry.gitlab.com/medicines-discovery-catapult/informatics/docker-images/ci/golang
  script:
    - cictl exec release golang
  only:
    refs:
      - main
  except:
    variables:
      - "$CI_COMMIT_MESSAGE =~ /^Setting version to.*/"

container_scanning:
  stage: container-scanning
  allow_failure: false
  variables:
    CS_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG

dependency_scanning:
  stage: test-lint-build
  allow_failure: false

sast:
  stage: test-lint-build
  allow_failure: false

secret_detection:
  stage: test-lint-build
  allow_failure: false

include:
  - template: Jobs/Secret-Detection.gitlab-ci.yml
  - template: Security/Container-Scanning.gitlab-ci.yml
  - template: Security/Dependency-Scanning.gitlab-ci.yml
  - template: Security/SAST.gitlab-ci.yml
  - template: Security/SAST-IaC.gitlab-ci.yml
